package gestionmemoria;

public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();        
        this.setLocationRelativeTo(null);                                        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgTam = new javax.swing.ButtonGroup();
        bgAjuste = new javax.swing.ButtonGroup();
        bgTamProc = new javax.swing.ButtonGroup();
        btnMemStart = new RSMaterialComponent.RSButtonShapeIcon();
        btnRemove = new RSMaterialComponent.RSButtonShapeIcon();
        txtRemove = new RSMaterialComponent.RSTextFieldMaterial();
        rbMbProc = new RSMaterialComponent.RSRadioButtonMaterial();
        rbKbProc = new RSMaterialComponent.RSRadioButtonMaterial();
        txtTamProc = new RSMaterialComponent.RSTextFieldMaterial();
        txtProc = new RSMaterialComponent.RSTextFieldMaterial();
        rbSiguiente = new RSMaterialComponent.RSRadioButtonMaterial();
        rbPrimer = new RSMaterialComponent.RSRadioButtonMaterial();
        rbPeor = new RSMaterialComponent.RSRadioButtonMaterial();
        rbMejor = new RSMaterialComponent.RSRadioButtonMaterial();
        txtTam = new RSMaterialComponent.RSTextFieldMaterial();
        rbKb = new RSMaterialComponent.RSRadioButtonMaterial();
        rbMb = new RSMaterialComponent.RSRadioButtonMaterial();
        btnClose = new RSMaterialComponent.RSButtonShapeIcon();
        btnAdd = new RSMaterialComponent.RSButtonShapeIcon();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtListaProc = new javax.swing.JTextArea();
        txtMemory = new RSMaterialComponent.RSTextFieldMaterialIcon();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnMemStart.setBackground(new java.awt.Color(0, 102, 204));
        btnMemStart.setToolTipText("Iniciar memoria");
        btnMemStart.setBackgroundHover(new java.awt.Color(0, 153, 255));
        btnMemStart.setForma(RSMaterialComponent.RSButtonShapeIcon.FORMA.ROUND_LEFT);
        btnMemStart.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnMemStart.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MEMORY);
        btnMemStart.setThemeTooltip(necesario.Global.THEMETOOLTIP.LIGHT);
        btnMemStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemStartActionPerformed(evt);
            }
        });
        getContentPane().add(btnMemStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 160, 40, 40));

        btnRemove.setBackground(new java.awt.Color(0, 102, 204));
        btnRemove.setToolTipText("Eliminar proceso");
        btnRemove.setBackgroundHover(new java.awt.Color(0, 153, 255));
        btnRemove.setForma(RSMaterialComponent.RSButtonShapeIcon.FORMA.ROUND_TOP);
        btnRemove.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRemove.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.REMOVE_CIRCLE_OUTLINE);
        btnRemove.setThemeTooltip(necesario.Global.THEMETOOLTIP.LIGHT);
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        getContentPane().add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 530, 70, 40));

        txtRemove.setBackground(new java.awt.Color(0, 102, 153));
        txtRemove.setForeground(new java.awt.Color(255, 255, 255));
        txtRemove.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRemove.setPlaceholder("");
        getContentPane().add(txtRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 480, 50, -1));

        bgTamProc.add(rbMbProc);
        rbMbProc.setForeground(new java.awt.Color(255, 255, 255));
        rbMbProc.setText("Mb");
        rbMbProc.setColorCheck(new java.awt.Color(255, 255, 255));
        rbMbProc.setColorUnCheck(new java.awt.Color(255, 255, 255));
        rbMbProc.setRippleColor(new java.awt.Color(102, 153, 255));
        getContentPane().add(rbMbProc, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 60, -1));

        bgTamProc.add(rbKbProc);
        rbKbProc.setForeground(new java.awt.Color(255, 255, 255));
        rbKbProc.setText("Kb");
        rbKbProc.setColorCheck(new java.awt.Color(255, 255, 255));
        rbKbProc.setColorUnCheck(new java.awt.Color(255, 255, 255));
        rbKbProc.setRippleColor(new java.awt.Color(102, 153, 255));
        getContentPane().add(rbKbProc, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 60, -1));

        txtTamProc.setBackground(new java.awt.Color(0, 102, 153));
        txtTamProc.setForeground(new java.awt.Color(255, 255, 255));
        txtTamProc.setPlaceholder("");
        getContentPane().add(txtTamProc, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 340, 70, -1));

        txtProc.setBackground(new java.awt.Color(0, 102, 153));
        txtProc.setForeground(new java.awt.Color(255, 255, 255));
        txtProc.setPlaceholder("");
        getContentPane().add(txtProc, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, 40, -1));

        bgAjuste.add(rbSiguiente);
        rbSiguiente.setForeground(new java.awt.Color(255, 255, 255));
        rbSiguiente.setText("Siguiente ajuste");
        rbSiguiente.setColorCheck(new java.awt.Color(255, 255, 255));
        rbSiguiente.setColorUnCheck(new java.awt.Color(255, 255, 255));
        rbSiguiente.setRippleColor(new java.awt.Color(102, 153, 255));
        getContentPane().add(rbSiguiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, 160, -1));

        bgAjuste.add(rbPrimer);
        rbPrimer.setForeground(new java.awt.Color(255, 255, 255));
        rbPrimer.setText("Primer ajuste");
        rbPrimer.setColorCheck(new java.awt.Color(255, 255, 255));
        rbPrimer.setColorUnCheck(new java.awt.Color(255, 255, 255));
        rbPrimer.setRippleColor(new java.awt.Color(102, 153, 255));
        getContentPane().add(rbPrimer, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 220, 130, -1));

        bgAjuste.add(rbPeor);
        rbPeor.setForeground(new java.awt.Color(255, 255, 255));
        rbPeor.setText("Peor ajuste");
        rbPeor.setColorCheck(new java.awt.Color(255, 255, 255));
        rbPeor.setColorUnCheck(new java.awt.Color(255, 255, 255));
        rbPeor.setRippleColor(new java.awt.Color(102, 153, 255));
        getContentPane().add(rbPeor, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 130, -1));

        bgAjuste.add(rbMejor);
        rbMejor.setForeground(new java.awt.Color(255, 255, 255));
        rbMejor.setText("Mejor ajuste");
        rbMejor.setColorCheck(new java.awt.Color(255, 255, 255));
        rbMejor.setColorUnCheck(new java.awt.Color(255, 255, 255));
        rbMejor.setRippleColor(new java.awt.Color(102, 153, 255));
        getContentPane().add(rbMejor, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 130, -1));

        txtTam.setBackground(new java.awt.Color(0, 102, 153));
        txtTam.setForeground(new java.awt.Color(255, 255, 255));
        txtTam.setPlaceholder("");
        getContentPane().add(txtTam, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 50, -1));

        bgTam.add(rbKb);
        rbKb.setForeground(new java.awt.Color(255, 255, 255));
        rbKb.setText("Kb");
        rbKb.setColorCheck(new java.awt.Color(255, 255, 255));
        rbKb.setColorUnCheck(new java.awt.Color(255, 255, 255));
        rbKb.setRippleColor(new java.awt.Color(102, 153, 255));
        getContentPane().add(rbKb, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, 60, -1));

        bgTam.add(rbMb);
        rbMb.setForeground(new java.awt.Color(255, 255, 255));
        rbMb.setText("Mb");
        rbMb.setColorCheck(new java.awt.Color(255, 255, 255));
        rbMb.setColorUnCheck(new java.awt.Color(255, 255, 255));
        rbMb.setRippleColor(new java.awt.Color(102, 153, 255));
        getContentPane().add(rbMb, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 60, -1));

        btnClose.setBackground(new java.awt.Color(0, 102, 204));
        btnClose.setToolTipText("Agregar proceso");
        btnClose.setBackgroundHover(new java.awt.Color(0, 153, 255));
        btnClose.setForma(RSMaterialComponent.RSButtonShapeIcon.FORMA.ROUND_BOTTOM);
        btnClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnClose.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnClose.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.CLOSE);
        btnClose.setThemeTooltip(necesario.Global.THEMETOOLTIP.LIGHT);
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 0, 40, 30));

        btnAdd.setBackground(new java.awt.Color(0, 102, 204));
        btnAdd.setToolTipText("Agregar proceso");
        btnAdd.setBackgroundHover(new java.awt.Color(0, 153, 255));
        btnAdd.setForma(RSMaterialComponent.RSButtonShapeIcon.FORMA.ROUND_LEFT);
        btnAdd.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.ADD_CIRCLE_OUTLINE);
        btnAdd.setThemeTooltip(necesario.Global.THEMETOOLTIP.LIGHT);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 340, 60, 50));

        jScrollPane1.setBackground(new java.awt.Color(0, 102, 153));
        jScrollPane1.setForeground(new java.awt.Color(255, 255, 255));

        txtListaProc.setEditable(false);
        txtListaProc.setBackground(new java.awt.Color(0, 102, 153));
        txtListaProc.setColumns(20);
        txtListaProc.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        txtListaProc.setForeground(new java.awt.Color(255, 255, 255));
        txtListaProc.setRows(1);
        jScrollPane1.setViewportView(txtListaProc);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 290, 50));

        txtMemory.setEditable(false);
        txtMemory.setBackground(new java.awt.Color(0, 102, 153));
        txtMemory.setForeground(new java.awt.Color(255, 255, 255));
        txtMemory.setColorIcon(new java.awt.Color(255, 255, 255));
        txtMemory.setColorMaterial(new java.awt.Color(0, 102, 204));
        txtMemory.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMemory.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.MEMORY);
        txtMemory.setPlaceholder("");
        getContentPane().add(txtMemory, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 290, -1));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo.png"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 590));

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    //Cerrar aplicación
    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        System.exit(0);       
    }//GEN-LAST:event_btnCloseActionPerformed

    // Botón para agregar procesos
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int proc, tam;
        
        proc = Integer.parseInt(txtProc.getText());
        tam = Integer.parseInt(txtTamProc.getText());
        
        GestionMemoria.creaProceso(proc, tam);
                        
        txtListaProc.setText(GestionMemoria.imprimeLista());
        txtMemory.setText(GestionMemoria.imprimeMemoria());
        
        txtProc.setText("");
        txtTamProc.setText("");
    }//GEN-LAST:event_btnAddActionPerformed

    //Boton Quitar procesos
    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        GestionMemoria.destruyeProceso(Integer.parseInt(txtRemove.getText()));
        txtMemory.setText(GestionMemoria.imprimeMemoria());
        txtListaProc.setText(GestionMemoria.imprimeLista());
        txtRemove.setText("");
    }//GEN-LAST:event_btnRemoveActionPerformed

    //Iniciar memoria
    private void btnMemStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemStartActionPerformed
        GestionMemoria.inicializaMemoria();
        txtMemory.setText(GestionMemoria.imprimeMemoria());
        
    }//GEN-LAST:event_btnMemStartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgAjuste;
    private javax.swing.ButtonGroup bgTam;
    private javax.swing.ButtonGroup bgTamProc;
    private RSMaterialComponent.RSButtonShapeIcon btnAdd;
    private RSMaterialComponent.RSButtonShapeIcon btnClose;
    private RSMaterialComponent.RSButtonShapeIcon btnMemStart;
    private RSMaterialComponent.RSButtonShapeIcon btnRemove;
    private javax.swing.JLabel fondo;
    private javax.swing.JScrollPane jScrollPane1;
    private RSMaterialComponent.RSRadioButtonMaterial rbKb;
    private RSMaterialComponent.RSRadioButtonMaterial rbKbProc;
    private RSMaterialComponent.RSRadioButtonMaterial rbMb;
    private RSMaterialComponent.RSRadioButtonMaterial rbMbProc;
    public static RSMaterialComponent.RSRadioButtonMaterial rbMejor;
    public static RSMaterialComponent.RSRadioButtonMaterial rbPeor;
    public static RSMaterialComponent.RSRadioButtonMaterial rbPrimer;
    public static RSMaterialComponent.RSRadioButtonMaterial rbSiguiente;
    private javax.swing.JTextArea txtListaProc;
    private RSMaterialComponent.RSTextFieldMaterialIcon txtMemory;
    private RSMaterialComponent.RSTextFieldMaterial txtProc;
    private RSMaterialComponent.RSTextFieldMaterial txtRemove;
    public static RSMaterialComponent.RSTextFieldMaterial txtTam;
    private RSMaterialComponent.RSTextFieldMaterial txtTamProc;
    // End of variables declaration//GEN-END:variables
}
